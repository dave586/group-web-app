@model Questionnaire.Models.SelectTestModel 
@using SnapFramework.EFModel


@{
    ViewBag.Title = Questionnaire.Resources.Test.Views.Resource.PageTitleSelectTest;
    Layout = "~/Views/Shared/_layout.cshtml";
}

<div class="row section">
    <div class="col-sm-12">
        <div class="row paragraph">
            <div class="col-sm-2"></div>
            <div class="col-sm-8">
                <h2>@Questionnaire.Resources.Test.Views.Resource.PageTitleSelectTest</h2>
                <p>@Questionnaire.Resources.Test.Views.Resource.PageDescriptionSelectTest</p>
            </div>
            <div class="col-sm-2"></div>
        </div>
        @using (Html.BeginForm("StartTest", "Test", FormMethod.Post, new { id = "form-SelectTest" }))
        {
            <div class="row">
                <div class="col-sm-3"></div>
                <div class="col-sm-6">
                    @*<div class="row">
                        <div class="col-sm-6">
                            <div class="entityIdentifier-group">
                                <input disabled="disabled" title="@Model.ClientID" data-jvfloat="True" placeholder="Client ID" class="entityIdentifier-input" value="@Model.ClientID" />
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="entityIdentifier-group">
                                <input disabled="disabled" title="@Model.IntakeFileID" data-jvfloat="True" placeholder="Intake ID" class="entityIdentifier-input" value="@Model.IntakeFileID" />
                            </div>
                        </div>
                    </div>*@

                    @Html.ValidationMessage("SelectedTests")
                    @foreach (var item in @Model.Tests as List<QuestionnaireType>)
                    {
                    <div class="checkboxcontainer">
                        <input class="SelectedTests" name="SelectedTests" type="checkbox" id="@item.SelectorId" value="@item.SelectorId"/> 
                        <label class="checkboxlabel" for="@item.SelectorId"><span></span><span class="padder"></span>@item.QuestionnaireDisplayName</label>
                    </div>
                    }

                    <button class="btn" id="SelectTestSubmit" title="@Questionnaire.Resources.Test.Views.Resource.BtnNext" type="submit" value="@Questionnaire.Resources.Test.Views.Resource.BtnNext">@Questionnaire.Resources.Test.Views.Resource.BtnNext<i class="fa fa-caret-right"></i></button>
                    @*<a class="btn back" href="@Url.Action("ValidateClient", "Home")" title="@Questionnaire.Resources.Home.Views.Resource.BtnBack">@Questionnaire.Resources.Home.Views.Resource.BtnBack</a>*@
                    @Html.Hidden("ClientID")
                    @Html.Hidden("IntakeFileID")
                    @Html.Hidden("IsPreSession")
                </div>
                <div class="col-sm-3"></div>
            </div>
        }
        
        <div class="row">
            <div class="col-sm-3"></div>
            <div class="col-sm-6">
                @using (Html.BeginForm("ReValidateClient", "Home", FormMethod.Post, new { id = "form-ReValidateClient" }))
                {
                    @Html.HiddenFor(m => m.SessionTimeStamp)
                    @Html.HiddenFor(m => m.ClientFirstName)
                    @Html.HiddenFor(m => m.ClientLastName)
                    @*Html.HiddenFor(m=>m.ClientBirthDate)*@
                    @Html.HiddenFor(m => m.ClientBD_Day)
                    @Html.HiddenFor(m => m.ClientBD_Month)
                    @Html.HiddenFor(m => m.ClientBD_Year)
                    <button class="back" type="submit" title="@Questionnaire.Resources.Home.Views.Resource.BtnBack">@Questionnaire.Resources.Home.Views.Resource.BtnBack</button>
                }
            </div>
            <div class="col-sm-3"></div>
        </div>
    </div>
</div>
<script>
    (function () {
       
        $.validator.addMethod("oneselected",
            function (value, element) {
                return $(".SelectedTests:checked").length > 0;
            });

        Utilities.validation.ValidateForm($("#form-SelectTest"), {}, {}, true);
        
        $('.SelectedTests').rules('add', {
            oneselected: true,
            messages: { oneselected: '@Questionnaire.Resources.Test.Views.Resource.SelectTestError' }
        });
        
    })();
</script>